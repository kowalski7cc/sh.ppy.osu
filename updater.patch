---
 osu.Desktop/OsuGameDesktop.cs               |  3 +
 osu.Desktop/Updater/FlatpakUpdateManager.cs | 68 +++++++++++++++++++++
 osu.Game/Configuration/OsuConfigManager.cs  |  2 +-
 osu.Game/Configuration/ReleaseStream.cs     |  3 +-
 osu.Game/OsuGameBase.cs                     |  2 +-
 5 files changed, 75 insertions(+), 3 deletions(-)
 create mode 100644 osu.Desktop/Updater/FlatpakUpdateManager.cs

diff --git a/osu.Desktop/OsuGameDesktop.cs b/osu.Desktop/OsuGameDesktop.cs
index f05ee48914..678fee0c46 100644
--- a/osu.Desktop/OsuGameDesktop.cs
+++ b/osu.Desktop/OsuGameDesktop.cs
@@ -54,6 +54,9 @@ protected override UpdateManager CreateUpdateManager()
                 case RuntimeInfo.Platform.Windows:
                     return new SquirrelUpdateManager();

+                case RuntimeInfo.Platform.Linux:
+                    return new FlatpakUpdateManager();
+
                 default:
                     return new SimpleUpdateManager();
             }
diff --git a/osu.Desktop/Updater/FlatpakUpdateManager.cs b/osu.Desktop/Updater/FlatpakUpdateManager.cs
new file mode 100644
index 0000000000..6a25709859
--- /dev/null
+++ b/osu.Desktop/Updater/FlatpakUpdateManager.cs
@@ -0,0 +1,68 @@
+// Copyright (c) ppy Pty Ltd <contact@ppy.sh>. Licensed under the MIT Licence.
+// See the LICENCE file in the repository root for full licence text.
+
+using System.Collections.Generic;
+using System.Threading.Tasks;
+using Newtonsoft.Json;
+using osu.Framework;
+using osu.Framework.Allocation;
+using osu.Framework.Graphics.Sprites;
+using osu.Framework.Platform;
+using osu.Game.Online.API;
+using osu.Game.Overlays.Notifications;
+
+namespace osu.Desktop.Updater
+{
+    public class FlatpakUpdateManager : osu.Game.Updater.UpdateManager
+    {
+
+        private string version;
+
+        [Resolved]
+        private GameHost host { get; set; }
+
+        [BackgroundDependencyLoader]
+        private void load(OsuGameBase game)
+        {
+            version = game.Version;
+
+            if (game.IsDeployedBuild)
+                Schedule(() => Task.Run(checkForUpdateAsync));
+        }
+
+        private async void checkForUpdateAsync()
+        {
+            try
+            {
+                // Query flatpak info for update informations
+
+                //var releases = new OsuJsonWebRequest<GitHubRelease>("https://api.github.com/repos/ppy/osu/releases/latest");
+
+                //await releases.PerformAsync();
+
+                var latest = version;
+
+                if (false)
+                {
+                    Notifications.Post(new SimpleNotification
+                    {
+                        Text = $"A newer release of osu! has been found ({version} â†’ {latest.TagName}).\n\n"
+                               + "Click your package manager for updates",
+                        Icon = FontAwesome.Solid.Upload,
+                        Activated = () =>
+                        {
+                            return true;
+                        }
+                    });
+                }
+            }
+            catch
+            {
+                // we shouldn't crash on a web failure. or any failure for the matter.
+            }
+        }
+
+
+    }
+
+}
\ No newline at end of file
diff --git a/osu.Game/Configuration/OsuConfigManager.cs b/osu.Game/Configuration/OsuConfigManager.cs
index 41f6747b74..41c36845ca 100644
--- a/osu.Game/Configuration/OsuConfigManager.cs
+++ b/osu.Game/Configuration/OsuConfigManager.cs
@@ -97,7 +97,7 @@ protected override void InitialiseDefaults()
             Set(OsuSetting.IncreaseFirstObjectVisibility, true);

             // Update
-            Set(OsuSetting.ReleaseStream, ReleaseStream.Lazer);
+            Set(OsuSetting.ReleaseStream, ReleaseStream.Flatpak);

             Set(OsuSetting.Version, string.Empty);

diff --git a/osu.Game/Configuration/ReleaseStream.cs b/osu.Game/Configuration/ReleaseStream.cs
index ed0bee1dd8..5dc19f86e8 100644
--- a/osu.Game/Configuration/ReleaseStream.cs
+++ b/osu.Game/Configuration/ReleaseStream.cs
@@ -5,7 +5,8 @@ namespace osu.Game.Configuration
 {
     public enum ReleaseStream
     {
-        Lazer,
+        Flatpak,
+        //Lazer,
         //Stable40,
         //Beta40,
         //Stable
diff --git a/osu.Game/OsuGameBase.cs b/osu.Game/OsuGameBase.cs
index 5487bd9320..1598c42f1a 100644
--- a/osu.Game/OsuGameBase.cs
+++ b/osu.Game/OsuGameBase.cs
@@ -45,7 +45,7 @@ namespace osu.Game
     /// </summary>
     public class OsuGameBase : Framework.Game, ICanAcceptFiles
     {
-        public const string CLIENT_STREAM_NAME = "lazer";
+        public const string CLIENT_STREAM_NAME = "flatpak";

         public const int SAMPLE_CONCURRENCY = 6;

--
2.33.1
